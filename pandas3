{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":9546989,"sourceType":"datasetVersion","datasetId":5528406}],"dockerImageVersionId":30786,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/medinebkaya/pandas3?scriptVersionId=199582014\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-10-05T09:26:59.20461Z","iopub.execute_input":"2024-10-05T09:26:59.20507Z","iopub.status.idle":"2024-10-05T09:26:59.214301Z","shell.execute_reply.started":"2024-10-05T09:26:59.205029Z","shell.execute_reply":"2024-10-05T09:26:59.213092Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"temperatures=pd.read_csv(\"/kaggle/input/datacampdatasets/temperatures.csv\",index_col=0)","metadata":{"execution":{"iopub.status.busy":"2024-10-05T09:26:59.216663Z","iopub.execute_input":"2024-10-05T09:26:59.217504Z","iopub.status.idle":"2024-10-05T09:26:59.247142Z","shell.execute_reply.started":"2024-10-05T09:26:59.21745Z","shell.execute_reply":"2024-10-05T09:26:59.24599Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Explicit indexes","metadata":{}},{"cell_type":"markdown","source":"## Setting and removing indexes","metadata":{}},{"cell_type":"code","source":"# Look at temperatures\nprint(temperatures)","metadata":{"execution":{"iopub.status.busy":"2024-10-05T09:26:59.248405Z","iopub.execute_input":"2024-10-05T09:26:59.248753Z","iopub.status.idle":"2024-10-05T09:26:59.258263Z","shell.execute_reply.started":"2024-10-05T09:26:59.248715Z","shell.execute_reply":"2024-10-05T09:26:59.257184Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Set the index of temperatures to city\ntemperatures_ind = temperatures.set_index(\"city\")\n\n# Look at temperatures_ind\nprint(temperatures_ind)","metadata":{"execution":{"iopub.status.busy":"2024-10-05T09:26:59.260698Z","iopub.execute_input":"2024-10-05T09:26:59.261115Z","iopub.status.idle":"2024-10-05T09:26:59.271626Z","shell.execute_reply.started":"2024-10-05T09:26:59.261074Z","shell.execute_reply":"2024-10-05T09:26:59.27055Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Reset the temperatures_ind index, keeping its contents\nprint(temperatures_ind.reset_index())","metadata":{"execution":{"iopub.status.busy":"2024-10-05T09:26:59.273109Z","iopub.execute_input":"2024-10-05T09:26:59.273486Z","iopub.status.idle":"2024-10-05T09:26:59.283743Z","shell.execute_reply.started":"2024-10-05T09:26:59.273448Z","shell.execute_reply":"2024-10-05T09:26:59.282732Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Reset the temperatures_ind index, dropping its contents\nprint(temperatures_ind.reset_index(drop=True))","metadata":{"execution":{"iopub.status.busy":"2024-10-05T09:26:59.285217Z","iopub.execute_input":"2024-10-05T09:26:59.285634Z","iopub.status.idle":"2024-10-05T09:26:59.29557Z","shell.execute_reply.started":"2024-10-05T09:26:59.285588Z","shell.execute_reply":"2024-10-05T09:26:59.294452Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Subsetting with .loc[]","metadata":{}},{"cell_type":"code","source":"# Make a list of cities to subset on\ncities = [\"Moscow\", \"Saint Petersburg\"]\n\n# Subset temperatures using square brackets\nprint(temperatures[temperatures[\"city\"].isin(cities)])\n\nprint(\"----------------------------------------------------\")\n\n# Subset temperatures_ind using .loc[]\nprint(temperatures_ind.loc[cities])","metadata":{"execution":{"iopub.status.busy":"2024-10-05T09:26:59.297068Z","iopub.execute_input":"2024-10-05T09:26:59.2975Z","iopub.status.idle":"2024-10-05T09:26:59.315088Z","shell.execute_reply.started":"2024-10-05T09:26:59.297453Z","shell.execute_reply":"2024-10-05T09:26:59.313937Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Setting multi-level indexes","metadata":{}},{"cell_type":"code","source":"# Index temperatures by country & city\ntemperatures_ind = temperatures.set_index([\"country\", \"city\"])\n\n# List of tuples: Brazil, Rio De Janeiro & Pakistan, Lahore\nrows_to_keep = [(\"Brazil\", \"Rio De Janeiro\"), (\"Pakistan\", \"Lahore\")]\n\n# Subset for rows to keep\nprint(temperatures_ind.loc[rows_to_keep])","metadata":{"execution":{"iopub.status.busy":"2024-10-05T09:26:59.316501Z","iopub.execute_input":"2024-10-05T09:26:59.316889Z","iopub.status.idle":"2024-10-05T09:26:59.339279Z","shell.execute_reply.started":"2024-10-05T09:26:59.316841Z","shell.execute_reply":"2024-10-05T09:26:59.338127Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Sorting by index values","metadata":{}},{"cell_type":"code","source":"# Sort temperatures_ind by index values\nprint(temperatures_ind.sort_index())","metadata":{"execution":{"iopub.status.busy":"2024-10-05T09:26:59.341871Z","iopub.execute_input":"2024-10-05T09:26:59.342241Z","iopub.status.idle":"2024-10-05T09:26:59.355679Z","shell.execute_reply.started":"2024-10-05T09:26:59.342202Z","shell.execute_reply":"2024-10-05T09:26:59.354473Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Sort temperatures_ind by index values at the city level\nprint(temperatures_ind.sort_index(level=\"city\"))","metadata":{"execution":{"iopub.status.busy":"2024-10-05T09:26:59.410876Z","iopub.execute_input":"2024-10-05T09:26:59.411876Z","iopub.status.idle":"2024-10-05T09:26:59.424644Z","shell.execute_reply.started":"2024-10-05T09:26:59.41182Z","shell.execute_reply":"2024-10-05T09:26:59.423373Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Sort temperatures_ind by country then descending city\nprint(temperatures_ind.sort_index(level=[\"country\", \"city\"], ascending = [True, False]))","metadata":{"execution":{"iopub.status.busy":"2024-10-05T09:26:59.427208Z","iopub.execute_input":"2024-10-05T09:26:59.427707Z","iopub.status.idle":"2024-10-05T09:26:59.440289Z","shell.execute_reply.started":"2024-10-05T09:26:59.427651Z","shell.execute_reply":"2024-10-05T09:26:59.439063Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Slicing and subsetting with .loc and .iloc\n","metadata":{}},{"cell_type":"markdown","source":"## Slicing index values","metadata":{}},{"cell_type":"code","source":"# Sort the index of temperatures_ind\ntemperatures_srt = temperatures_ind.sort_index()\n\n# Subset rows from Pakistan to Russia\nprint(temperatures_srt.loc[\"Pakistan\":\"Russia\"])","metadata":{"execution":{"iopub.status.busy":"2024-10-05T09:26:59.441583Z","iopub.execute_input":"2024-10-05T09:26:59.441999Z","iopub.status.idle":"2024-10-05T09:26:59.454673Z","shell.execute_reply.started":"2024-10-05T09:26:59.441952Z","shell.execute_reply":"2024-10-05T09:26:59.453636Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# incorrect usage\n# Try to subset rows from Lahore to Moscow\nprint(temperatures_srt.loc[\"Lahore\":\"Moscow\"])","metadata":{"execution":{"iopub.status.busy":"2024-10-05T09:26:59.455948Z","iopub.execute_input":"2024-10-05T09:26:59.456275Z","iopub.status.idle":"2024-10-05T09:26:59.466638Z","shell.execute_reply.started":"2024-10-05T09:26:59.456237Z","shell.execute_reply":"2024-10-05T09:26:59.465373Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# correct usage\n# Subset rows from Pakistan, Lahore to Russia, Moscow\nprint(temperatures_srt.loc[(\"Pakistan\",\"Lahore\"):(\"Russia\",\"Moscow\")])","metadata":{"execution":{"iopub.status.busy":"2024-10-05T09:26:59.470047Z","iopub.execute_input":"2024-10-05T09:26:59.471063Z","iopub.status.idle":"2024-10-05T09:26:59.483238Z","shell.execute_reply.started":"2024-10-05T09:26:59.471008Z","shell.execute_reply":"2024-10-05T09:26:59.481943Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Slicing in both directions","metadata":{}},{"cell_type":"code","source":"# Subset rows from India, Hyderabad to Iraq, Baghdad\nprint(temperatures_srt.loc[(\"India\",\"Hyderabad\"):(\"Iraq\",\"Baghdad\")])","metadata":{"execution":{"iopub.status.busy":"2024-10-05T09:26:59.48462Z","iopub.execute_input":"2024-10-05T09:26:59.485147Z","iopub.status.idle":"2024-10-05T09:26:59.497919Z","shell.execute_reply.started":"2024-10-05T09:26:59.485106Z","shell.execute_reply":"2024-10-05T09:26:59.496635Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"\n# Subset columns from date to avg_temp_c\nprint(temperatures_srt.loc[:,\"date\":\"avg_temp_c\"])","metadata":{"execution":{"iopub.status.busy":"2024-10-05T09:26:59.499319Z","iopub.execute_input":"2024-10-05T09:26:59.499792Z","iopub.status.idle":"2024-10-05T09:26:59.517671Z","shell.execute_reply.started":"2024-10-05T09:26:59.499701Z","shell.execute_reply":"2024-10-05T09:26:59.51603Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Subset in both directions at once\nprint(\n    temperatures_srt.loc\n    [\n    (\"India\",\"Hyderabad\"):(\"Iraq\",\"Baghdad\"),\n    \"date\":\"avg_temp_c\"\n    ]\n    )","metadata":{"execution":{"iopub.status.busy":"2024-10-05T09:26:59.519719Z","iopub.execute_input":"2024-10-05T09:26:59.52042Z","iopub.status.idle":"2024-10-05T09:26:59.536591Z","shell.execute_reply.started":"2024-10-05T09:26:59.520369Z","shell.execute_reply":"2024-10-05T09:26:59.535299Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Slicing time series","metadata":{}},{"cell_type":"code","source":"# Use Boolean conditions to subset temperatures for rows in 2010 and 2011\ntemperatures_bool = temperatures[(temperatures[\"date\"] >= \"2010-01-01\") & (temperatures[\"date\"] <= \"2011-12-31\")]\nprint(temperatures_bool)","metadata":{"execution":{"iopub.status.busy":"2024-10-05T09:26:59.540679Z","iopub.execute_input":"2024-10-05T09:26:59.541106Z","iopub.status.idle":"2024-10-05T09:26:59.566238Z","shell.execute_reply.started":"2024-10-05T09:26:59.541067Z","shell.execute_reply":"2024-10-05T09:26:59.564703Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Set date as the index and sort the index\ntemperatures_ind = temperatures.set_index(\"date\").sort_index()","metadata":{"execution":{"iopub.status.busy":"2024-10-05T09:26:59.568082Z","iopub.execute_input":"2024-10-05T09:26:59.568834Z","iopub.status.idle":"2024-10-05T09:26:59.595905Z","shell.execute_reply.started":"2024-10-05T09:26:59.568713Z","shell.execute_reply":"2024-10-05T09:26:59.594517Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Use .loc[] to subset temperatures_ind for rows in 2010 and 2011\nprint(temperatures_ind.loc[\"2010\":\"2011\"])","metadata":{"execution":{"iopub.status.busy":"2024-10-05T09:26:59.597247Z","iopub.execute_input":"2024-10-05T09:26:59.597614Z","iopub.status.idle":"2024-10-05T09:26:59.610507Z","shell.execute_reply.started":"2024-10-05T09:26:59.597577Z","shell.execute_reply":"2024-10-05T09:26:59.609039Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Use .loc[] to subset temperatures_ind for rows from Aug 2010 to Feb 2011\nprint(temperatures_ind.loc[\"2010-08\":\"2011-02\"])","metadata":{"execution":{"iopub.status.busy":"2024-10-05T09:26:59.611779Z","iopub.execute_input":"2024-10-05T09:26:59.612153Z","iopub.status.idle":"2024-10-05T09:26:59.627515Z","shell.execute_reply.started":"2024-10-05T09:26:59.612116Z","shell.execute_reply":"2024-10-05T09:26:59.626207Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Subsetting by row/column number","metadata":{}},{"cell_type":"code","source":"# Get 23rd row, 2nd column (index 22, 1)\nprint(temperatures.iloc[:23, :2])","metadata":{"execution":{"iopub.status.busy":"2024-10-05T09:26:59.629115Z","iopub.execute_input":"2024-10-05T09:26:59.629529Z","iopub.status.idle":"2024-10-05T09:26:59.644818Z","shell.execute_reply.started":"2024-10-05T09:26:59.629469Z","shell.execute_reply":"2024-10-05T09:26:59.64382Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Use slicing to get the first 5 rows\nprint(temperatures.iloc[:5])","metadata":{"execution":{"iopub.status.busy":"2024-10-05T09:26:59.648031Z","iopub.execute_input":"2024-10-05T09:26:59.648841Z","iopub.status.idle":"2024-10-05T09:26:59.658395Z","shell.execute_reply.started":"2024-10-05T09:26:59.648796Z","shell.execute_reply":"2024-10-05T09:26:59.657449Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Use slicing to get columns 3 to 4\nprint(temperatures.iloc[:,2:4])","metadata":{"execution":{"iopub.status.busy":"2024-10-05T09:26:59.659845Z","iopub.execute_input":"2024-10-05T09:26:59.660305Z","iopub.status.idle":"2024-10-05T09:26:59.673548Z","shell.execute_reply.started":"2024-10-05T09:26:59.660257Z","shell.execute_reply":"2024-10-05T09:26:59.672426Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Use slicing in both directions at once\nprint(temperatures.iloc[:5,2:4])","metadata":{"execution":{"iopub.status.busy":"2024-10-05T09:26:59.674885Z","iopub.execute_input":"2024-10-05T09:26:59.675553Z","iopub.status.idle":"2024-10-05T09:26:59.685304Z","shell.execute_reply.started":"2024-10-05T09:26:59.675513Z","shell.execute_reply":"2024-10-05T09:26:59.684118Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Working with pivot tables","metadata":{}},{"cell_type":"markdown","source":"## Pivot temperature by city and year","metadata":{}},{"cell_type":"code","source":"temperatures[\"date\"] = pd.to_datetime(temperatures[\"date\"], errors='coerce')\n\n# Add a year column to temperatures\ntemperatures[\"year\"] = temperatures[\"date\"].dt.year\n\n# Pivot avg_temp_c by country and city vs year\ntemp_by_country_city_vs_year = temperatures.pivot_table(\"avg_temp_c\", index = [\"country\", \"city\"], columns = \"year\")\n\n# See the result\nprint(temp_by_country_city_vs_year)","metadata":{"execution":{"iopub.status.busy":"2024-10-05T09:28:05.797972Z","iopub.execute_input":"2024-10-05T09:28:05.799015Z","iopub.status.idle":"2024-10-05T09:28:05.842199Z","shell.execute_reply.started":"2024-10-05T09:28:05.798967Z","shell.execute_reply":"2024-10-05T09:28:05.840966Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Subsetting pivot tables","metadata":{}},{"cell_type":"code","source":"# Subset for Egypt to India\ntemp_by_country_city_vs_year.loc[\"Egypt\":\"India\"]","metadata":{"execution":{"iopub.status.busy":"2024-10-05T09:32:06.259395Z","iopub.execute_input":"2024-10-05T09:32:06.26018Z","iopub.status.idle":"2024-10-05T09:32:06.291577Z","shell.execute_reply.started":"2024-10-05T09:32:06.260136Z","shell.execute_reply":"2024-10-05T09:32:06.290521Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Subset for Egypt, Cairo to India, Delhi\ntemp_by_country_city_vs_year.loc[(\"Egypt\",\"Cairo\"):(\"India\",\"Delhi\")]","metadata":{"execution":{"iopub.status.busy":"2024-10-05T09:32:10.5932Z","iopub.execute_input":"2024-10-05T09:32:10.594103Z","iopub.status.idle":"2024-10-05T09:32:10.617153Z","shell.execute_reply.started":"2024-10-05T09:32:10.594056Z","shell.execute_reply":"2024-10-05T09:32:10.61597Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Subset for Egypt, Cairo to India, Delhi, and 2005 to 2010\ntemp_by_country_city_vs_year.loc[(\"Egypt\",\"Cairo\"):(\"India\",\"Delhi\"),2005:2010]","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Calculating on a pivot table","metadata":{}},{"cell_type":"code","source":"# Get the worldwide mean temp by year\nmean_temp_by_year = temp_by_country_city_vs_year.mean()\nmean_temp_by_year","metadata":{"execution":{"iopub.status.busy":"2024-10-05T09:40:17.31515Z","iopub.execute_input":"2024-10-05T09:40:17.315982Z","iopub.status.idle":"2024-10-05T09:40:17.324605Z","shell.execute_reply.started":"2024-10-05T09:40:17.315933Z","shell.execute_reply":"2024-10-05T09:40:17.323549Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Filter for the year that had the highest mean temp\nprint(mean_temp_by_year[mean_temp_by_year == mean_temp_by_year.max()])","metadata":{"execution":{"iopub.status.busy":"2024-10-05T09:38:36.873153Z","iopub.execute_input":"2024-10-05T09:38:36.873591Z","iopub.status.idle":"2024-10-05T09:38:36.880444Z","shell.execute_reply.started":"2024-10-05T09:38:36.873549Z","shell.execute_reply":"2024-10-05T09:38:36.879203Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Get the mean temp by city\nmean_temp_by_city = temp_by_country_city_vs_year.mean(axis=\"columns\")\nmean_temp_by_city","metadata":{"execution":{"iopub.status.busy":"2024-10-05T09:42:07.407076Z","iopub.execute_input":"2024-10-05T09:42:07.407492Z","iopub.status.idle":"2024-10-05T09:42:07.419321Z","shell.execute_reply.started":"2024-10-05T09:42:07.407453Z","shell.execute_reply":"2024-10-05T09:42:07.418179Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Filter for the city that had the lowest mean temp\nprint(mean_temp_by_city[mean_temp_by_city == mean_temp_by_city.min()])","metadata":{"execution":{"iopub.status.busy":"2024-10-05T09:39:09.981368Z","iopub.execute_input":"2024-10-05T09:39:09.982632Z","iopub.status.idle":"2024-10-05T09:39:09.989387Z","shell.execute_reply.started":"2024-10-05T09:39:09.982582Z","shell.execute_reply":"2024-10-05T09:39:09.988174Z"},"trusted":true},"execution_count":null,"outputs":[]}]}